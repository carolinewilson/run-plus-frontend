"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(l.user).then(function(){t.go("setup")})}var l=this;l.user={},l.submit=r}function LoginController(e,t){function r(){e.login(l.credentials).then(function(){t.go("setup")})}var l=this;l.credentials={},l.submit=r}function MainController(e,t){function r(){e.logout().then(function(){t.go("login")})}var l=this;l.isLoggedIn=e.isAuthenticated,l.logout=r}function PlansIndexController(e,t){var r=this;r.currentUser=t.getPayload().id,r.all=e.query()}function PlansShowController(e,t){var r=this;r.plan=e.get(t.params,function(){r.totalWorkouts=0,r.completedWorkouts=0,r.plan.user_days.forEach(function(e){e.exercise&&(r.totalWorkouts+=1,e.completed&&(r.completedWorkouts+=1))}),r.totalMiles=0,r.completedMiles=0,r.plan.user_days.forEach(function(e){e.exercise&&(r.totalMiles+=e.exercise.miles,e.completed&&(r.completedMiles+=e.exercise.miles))}),r.totalMiles=Math.floor(r.totalMiles),r.completedMiles=Math.floor(r.completedMiles)})}function Router(e,t){e.state("homepage",{url:"/",templateUrl:"/templates/homepage.html",controller:"MainController as main"}).state("setup",{url:"/setup",templateUrl:"/templates/setup.html",controller:"SetupController as setupPlan"}).state("plansIndex",{url:"/plans",templateUrl:"/templates/plansIndex.html",controller:"PlansIndexController as plansIndex"}).state("plansShow",{url:"/plans/:id",templateUrl:"/templates/plansShow.html",controller:"PlansShowController as plansShow"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}),t.otherwise("/users")}function SetupController(e,t){function r(){e.save(l,function(){t.go("plan")})}var l=this;l.create=r}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UserPlan(e,t){return new e(t+"/user_plans/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t){function r(){l.user.$remove(function(){t.go("usersIndex")})}var l=this;l.user=e.get(t.params),l.delete=r}function UsersEditController(e,t){function r(){e.update(l.user.id,l.user,function(){t.go("usersShow",t.params)})}var l=this;l.user=e.get(t.params),l.update=r}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state"],angular.module("finalProject").controller("PlansIndexController",PlansIndexController).controller("PlansShowController",PlansShowController),PlansIndexController.$inject=["User","$auth"],PlansShowController.$inject=["UserPlan","$state"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("SetupController",SetupController),SetupController.$inject=["UserPlan","$state"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").factory("UserPlan",UserPlan),UserPlan.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
