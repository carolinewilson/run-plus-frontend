"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function l(){e.signup(r.user).then(function(){t.go("login")})}var r=this;r.user={},r.submit=l}function LoginController(e,t){function l(){e.login(r.credentials).then(function(e){e.data.user.user_plans.forEach(function(e){e.active&&(r.activePlans=!0)}),r.activePlans?t.go("plansIndex"):t.go("setup")})}var r=this;r.credentials={},r.activePlans=!1,r.submit=l}function DaysIndexController(e,t){var l=this;l.plan=e.get(t.params)}function DaysShowController(e,t){function l(){r.day.completed=!0,e.update(r.dayId,r.day)}var r=this;r.planId=t.params.planId,r.dayId=t.params.dayId,r.day=e.get({id:r.dayId}),r.markDone=l}function Day(e,t){return new e(t+"/user_days/:id",{id:"@id"},{update:{method:"PUT"}})}function MainController(e,t,l,r,o){function n(){e.logout().then(function(){t.go("homepage")})}var a=this,s=o.moment;a.isLoggedIn=e.isAuthenticated,a.hasActivePlan=!1,a.currentUser=e.getPayload().id,a.isLoggedIn()&&(a.currentUser=e.getPayload().id),a.all=l.get({id:a.currentUser},function(e){e.user_plans.forEach(function(e){e.active&&(a.activePlan=e.id,r.get({id:e.id},function(e){e.user_days.forEach(function(e){var t=s(e.date).format("YYYY-MM-DD"),l=s().format("YYYY-MM-DD");t===l&&(a.hasActivePlan=!0,a.dayId=e.id)})}))})}),a.logout=n}function PlansIndexController(e,t){var l=this;l.currentUser=t.getPayload().id,l.all=e.get({id:l.currentUser})}function PlansShowController(e,t,l){var r=this,o=l.moment;r.plan=e.get(t.params,function(){r.totalWorkouts=0,r.totalMiles=0,r.completedWorkouts=0,r.completedMiles=0,r.labels=[],r.series=["Target","Actual"],r.targetData=[],r.actualData=[],r.colors=["#45b7cd","#ff6384"];for(var e=r.plan.user_days.length/7,t=0;t<e;t++)r.labels.push("Week "+(t+1)),r.targetMiles=0,r.actualMiles=0,r.plan.user_days.forEach(function(e){e.week===t+1&&(e.exercise&&(r.targetMiles+=e.exercise.miles),e.completed&&(r.actualMiles+=e.exercise.miles))}),r.targetData.push(r.targetMiles),r.actualData.push(r.actualMiles);r.data=[r.targetData,r.actualData],r.plan.user_days.forEach(function(e){var t=o(e.date).format("YYYY-MM-DD"),l=o().format("YYYY-MM-DD");t===l&&(r.currentWeek=e.week),e.exercise&&(r.totalWorkouts+=1,r.totalMiles+=e.exercise.miles,e.completed&&(r.completedWorkouts+=1,r.completedMiles+=e.exercise.miles))}),r.totalMiles=Math.floor(r.totalMiles),r.completedMiles=Math.floor(r.completedMiles)})}function PlansEditController(e,t){function l(){o.plan.active=!1,t.update(e.params,o.plan,function(){e.go("plansIndex")})}function r(){t.remove(e.params,function(){e.go("plansIndex")})}var o=this;o.plan=t.get(e.params),o.endPlan=l,o.deletePlan=r}function PlansNewController(e,t,l){function r(e){o.activePlan.active=!1,t.update(e,o.activePlan,function(){l.go("setup")})}var o=this;e.get(l.params,function(e){o.userPlans=e.user_plans,o.hasActivePlan=!1,o.userPlans.forEach(function(e){e.active===!0&&(o.hasActivePlan=!0,o.activePlan=e)}),o.hasActivePlan||l.go("setup")}),o.endPlan=r}function planStats(){return{restrict:"E",replace:!0,templateUrl:"templates/planStats.html",scope:{compWo:"=",totWo:"=",compMi:"=",totMi:"="}}}function Router(e,t){e.state("homepage",{url:"/",templateUrl:"/templates/homepage.html",controller:"MainController as main"}).state("setup",{url:"/setup",templateUrl:"/templates/setup.html",controller:"SetupController as setupPlan"}).state("plansIndex",{url:"/plans",templateUrl:"/templates/plansIndex.html",controller:"PlansIndexController as plansIndex"}).state("plansShow",{url:"/plans/:id",templateUrl:"/templates/plansShow.html",controller:"PlansShowController as plansShow"}).state("plansEdit",{url:"/plans/:id/end",templateUrl:"/templates/plansEdit.html",controller:"PlansEditController as plansEdit"}).state("plansNew",{url:"/:id/new",templateUrl:"/templates/plansNew.html",controller:"PlansNewController as plansNew"}).state("weeksShow",{url:"/plans/:planId/weeks/:weekId",templateUrl:"/templates/weeksShow.html",controller:"WeeksShowController as weeksShow"}).state("weeksEdit",{url:"/plans/:planId/weeks/:weekId/edit",templateUrl:"/templates/weeksEdit.html",controller:"WeeksEditController as weeksEdit"}).state("daysIndex",{url:"/plans/:id/days",templateUrl:"/templates/daysIndex.html",controller:"DaysIndexController as daysIndex"}).state("daysShow",{url:"/plans/:planId/days/:dayId",templateUrl:"/templates/daysShow.html",controller:"DaysShowController as daysShow"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}),t.otherwise("/")}function SetupController(e,t,l){function r(){e.save(o,function(){t.go("plansIndex")})}var o=this;o.create=r}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UserPlan(e,t){return new e(t+"/user_plans/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,l){function r(){n.user.$remove(function(){t.go("usersIndex")})}function o(){l.logout().then(function(){t.go("homepage")})}var n=this;n.user=e.get(t.params),n.logout=o,n.delete=r}function UsersEditController(e,t){function l(){e.update(r.user.id,r.user,function(){t.go("usersShow",t.params)})}var r=this;r.user=e.get(t.params),r.update=l}function WeeksShowController(e,t){var l=this;l.planId=t.params.planId,l.weekId=t.params.weekId,l.totalWorkouts=0,l.completedWorkouts=0,l.totalMiles=0,l.completedMiles=0,e.get({id:l.planId,week:l.weekId},function(e){l.thisWeek=e.user_days,l.thisWeek.forEach(function(e){e.exercise&&(l.totalWorkouts+=1,l.totalMiles+=e.exercise.miles,e.completed&&(l.completedWorkouts+=1,l.completedMiles+=e.exercise.miles))}),l.totalMiles=Math.floor(l.totalMiles),l.completedMiles=Math.floor(l.completedMiles)})}function WeeksEditController(e,t){function l(e){var t=o.startingDay.position;o.thisWeek.splice(e,1),o.thisWeek.forEach(function(e){e.position=t,t++})}function r(){e.update(o.planId,o.plan)}var o=this;o.planId=t.params.planId,o.weekId=t.params.weekId,e.get({id:o.planId,week:o.weekId},function(e){o.plan=e,o.thisWeek=e.user_days.sort(function(e,t){return e.position-t.position}),o.startingDay=e.user_days[0]}),o.updatePosition=l,o.savePlan=r}angular.module("finalProject",["ngResource","ui.router","satellizer","chart.js","dndLists","ngMessages","ngMaterial"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("DaysIndexController",DaysIndexController).controller("DaysShowController",DaysShowController),DaysIndexController.$inject=["UserPlan","$state"],DaysShowController.$inject=["Day","$state"],angular.module("finalProject").factory("Day",Day),Day.$inject=["$resource","API_URL"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","User","UserPlan","$window"],angular.module("finalProject").controller("PlansIndexController",PlansIndexController).controller("PlansShowController",PlansShowController).controller("PlansEditController",PlansEditController).controller("PlansNewController",PlansNewController),PlansIndexController.$inject=["User","$auth"],PlansShowController.$inject=["UserPlan","$state","$window"],PlansEditController.$inject=["$state","UserPlan"],PlansNewController.$inject=["User","UserPlan","$state"],angular.module("finalProject").directive("planStats",planStats),angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("SetupController",SetupController),SetupController.$inject=["UserPlan","$state","$scope"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").factory("UserPlan",UserPlan),UserPlan.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").controller("WeeksShowController",WeeksShowController).controller("WeeksEditController",WeeksEditController),WeeksShowController.$inject=["UserPlan","$state"],WeeksEditController.$inject=["UserPlan","$state"];
//# sourceMappingURL=app.js.map
