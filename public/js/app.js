"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix="",e.oauth2({name:"strava",url:t+"/oauth/strava",clientId:"15120",redirectUri:window.location.origin,authorizationEndpoint:"https://www.strava.com/oauth/authorize"})}function RegisterController(e,t){function r(){e.signup(l.user).then(function(){t.go("login")})}var l=this;l.user={},l.submit=r}function LoginController(e,t){function r(){e.login(l.credentials).then(function(e){e.data.user.user_plans.forEach(function(e){e.active&&(l.activePlans=!0)}),l.activePlans?t.go("plansIndex"):t.go("setup")})}var l=this;l.credentials={},l.activePlans=!1,l.submit=r}function DaysIndexController(e,t){var r=this;r.plan=e.get(t.params)}function DaysShowController(e,t){function r(){l.day.completed=!0,e.update(l.dayId,l.day)}var l=this;l.planId=t.params.planId,l.dayId=t.params.dayId,l.day=e.get({id:l.dayId}),l.markDone=r}function Day(e,t){return new e(t+"/user_days/:id",{id:"@id"},{update:{method:"PUT"}})}function MainController(e,t,r,l,a){function o(){var r=e.getPayload().id;t.go("usersShow",{id:r})}function n(){e.logout().then(function(){t.go("homepage")})}var s=this,i=a.moment;s.isLoggedIn=e.isAuthenticated,s.hasActivePlan=!1,s.isLoggedIn()&&(s.currentUser=e.getPayload().id,s.all=r.get({id:s.currentUser},function(e){e.user_plans.forEach(function(e){e.active&&(s.activePlan=e.id,l.get({id:e.id},function(e){e.user_days.forEach(function(e){var t=i(e.date).format("YYYY-MM-DD"),r=i().format("YYYY-MM-DD");t===r&&(s.hasActivePlan=!0,s.dayId=e.id)})}))})})),s.logout=n,s.getUserId=o}function PlansIndexController(e,t){var r=this;r.currentUser=t.getPayload().id,r.all=e.get({id:r.currentUser},function(){r.all.user_plans.forEach(function(e){e.active&&(r.hasActivePlan=!0)})})}function PlansShowController(e,t,r){var l=this,a=r.moment;l.plan=e.get(t.params,function(){if(l.totalWorkouts=0,l.totalMiles=0,l.completedWorkouts=0,l.completedMiles=0,l.labels=[],l.series=["Target","Actual"],l.targetData=[],l.actualData=[],l.colors=["#45b7cd","#ff6384"],l.plan.active){var e=a(l.plan.start_date).format("YYYY-MM-DD"),t=a().format("YYYY-MM-DD");e>t&&(l.plan.future=!0)}for(var r=l.plan.user_days.length/7,o=0;o<r;o++)l.labels.push("Week "+(o+1)),l.targetMiles=0,l.actualMiles=0,l.plan.user_days.forEach(function(e){e.week===o+1&&(e.exercise&&(l.targetMiles+=e.exercise.miles),e.completed&&(l.actualMiles+=e.exercise.miles))}),l.targetData.push(l.targetMiles),l.actualData.push(l.actualMiles);l.data=[l.targetData,l.actualData],l.plan.user_days.forEach(function(e){var t=a(e.date).format("YYYY-MM-DD"),r=a().format("YYYY-MM-DD");t===r&&(l.currentWeek=e.week),e.exercise&&(l.totalWorkouts+=1,l.totalMiles+=e.exercise.miles,e.completed&&(l.completedWorkouts+=1,l.completedMiles+=e.exercise.miles))}),l.totalMiles=Math.floor(l.totalMiles),l.completedMiles=Math.floor(l.completedMiles)})}function PlansEditController(e,t){function r(){a.plan.active=!1,t.update(e.params,a.plan,function(){e.go("plansIndex")})}function l(){t.remove(e.params,function(){e.go("plansIndex")})}var a=this;a.plan=t.get(e.params),a.endPlan=r,a.deletePlan=l}function PlansNewController(e,t,r){function l(e){a.activePlan.active=!1,t.update(e,a.activePlan,function(){r.go("setup")})}var a=this;e.get(r.params,function(e){a.userPlans=e.user_plans,a.hasActivePlan=!1,a.userPlans.forEach(function(e){e.active===!0&&(a.hasActivePlan=!0,a.activePlan=e)}),a.hasActivePlan||r.go("setup")}),a.endPlan=l}function Router(e,t){e.state("homepage",{url:"/",templateUrl:"/templates/homepage.html",controller:"MainController as main"}).state("setup",{url:"/setup",templateUrl:"/templates/setup.html",controller:"SetupController as setupPlan"}).state("plansIndex",{url:"/plans",templateUrl:"/templates/plansIndex.html",controller:"PlansIndexController as plansIndex"}).state("plansShow",{url:"/plans/:id",templateUrl:"/templates/plansShow.html",controller:"PlansShowController as plansShow"}).state("plansEdit",{url:"/plans/:id/end",templateUrl:"/templates/plansEdit.html",controller:"PlansEditController as plansEdit"}).state("plansNew",{url:"/:id/new",templateUrl:"/templates/plansNew.html",controller:"PlansNewController as plansNew"}).state("weeksShow",{url:"/plans/:planId/weeks/:weekId",templateUrl:"/templates/weeksShow.html",controller:"WeeksShowController as weeksShow"}).state("weeksEdit",{url:"/plans/:planId/weeks/:weekId/edit",templateUrl:"/templates/weeksEdit.html",controller:"WeeksEditController as weeksEdit"}).state("daysIndex",{url:"/plans/:id/days",templateUrl:"/templates/daysIndex.html",controller:"DaysIndexController as daysIndex"}).state("daysShow",{url:"/plans/:planId/days/:dayId",templateUrl:"/templates/daysShow.html",controller:"DaysShowController as daysShow"}).state("stravaIndex",{url:"/strava",templateUrl:"/templates/stravaIndex.html",controller:"StravaIndexController as stravaIndex"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}),t.otherwise("/")}function SetupController(e,t){function r(){e.save(l,function(){t.go("plansIndex")})}var l=this;l.create=r}function StravaIndexController(e,t,r,l,a){var o=this,n=r.getPayload().id;l.get({id:n},function(e){e.user_plans.forEach(function(e){e.active&&a.get({id:e.id},function(e){o.userDays=e.user_days,e.user_days.forEach(function(e){e.date=moment(e.date).format("YYYY-MM-DD")}),console.log(e.user_days)})})});var s="b4a334d702082f818e68b3dc918cc7491a3e780c";t.getActivities(s).then(function(e){o.data=e},function(e){console.log(e)})}function StravaService(e){function t(t){return e({method:"GET",url:"http://localhost:3000/api/strava",params:{accessToken:t}}).then(function(e){return e.data.forEach(function(e){e.start_date=moment(e.start_date).format("YYYY-MM-DD")}),e.data},function(e){console.log(e)})}this.getActivities=t}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UserPlan(e,t){return new e(t+"/user_plans/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,r,l){function a(){s.user.$remove(function(){t.go("usersIndex")})}function o(){r.logout().then(function(){l.localStorage.removeItem("strava_token"),t.go("homepage")})}function n(){r.authenticate("strava").then(function(t){l.localStorage.setItem("strava_token",t.data.access_token),s.user.strava_id=t.data.athlete.id,e.update(s.user.id,s.user,function(e){console.log(e)})})}var s=this;s.user=e.get(t.params),s.logout=o,s.delete=a,s.authenticateStrava=n}function UsersEditController(e,t){function r(){e.update(l.user.id,l.user,function(){t.go("usersShow",t.params)})}var l=this;l.user=e.get(t.params),l.update=r}function WeeksShowController(e,t){var r=this;r.planId=t.params.planId,r.weekId=t.params.weekId,r.totalWorkouts=0,r.completedWorkouts=0,r.totalMiles=0,r.completedMiles=0,e.get({id:r.planId,week:r.weekId},function(e){r.thisWeek=e.user_days,r.thisWeek.forEach(function(e){e.exercise&&(r.totalWorkouts+=1,r.totalMiles+=e.exercise.miles,e.completed&&(r.completedWorkouts+=1,r.completedMiles+=e.exercise.miles))}),r.totalMiles=Math.floor(r.totalMiles),r.completedMiles=Math.floor(r.completedMiles)})}function WeeksEditController(e,t){function r(e){var t=a.startingDay.position;a.thisWeek.splice(e,1),a.thisWeek.forEach(function(e){e.position=t,t++})}function l(){e.update(a.planId,a.plan)}var a=this;a.planId=t.params.planId,a.weekId=t.params.weekId,e.get({id:a.planId,week:a.weekId},function(e){a.plan=e,a.thisWeek=e.user_days.sort(function(e,t){return e.position-t.position}),a.startingDay=e.user_days[0]}),a.updatePosition=r,a.savePlan=l}angular.module("finalProject",["ngResource","ui.router","satellizer","chart.js","dndLists","ngMessages","ngMaterial"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("DaysIndexController",DaysIndexController).controller("DaysShowController",DaysShowController),DaysIndexController.$inject=["UserPlan","$state"],DaysShowController.$inject=["Day","$state"],angular.module("finalProject").factory("Day",Day),Day.$inject=["$resource","API_URL"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","User","UserPlan","$window"],angular.module("finalProject").controller("PlansIndexController",PlansIndexController).controller("PlansShowController",PlansShowController).controller("PlansEditController",PlansEditController).controller("PlansNewController",PlansNewController),PlansIndexController.$inject=["User","$auth"],PlansShowController.$inject=["UserPlan","$state","$window"],PlansEditController.$inject=["$state","UserPlan"],PlansNewController.$inject=["User","UserPlan","$state"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("SetupController",SetupController),SetupController.$inject=["UserPlan","$state"],angular.module("finalProject").controller("StravaIndexController",StravaIndexController),StravaIndexController.$inject=["$http","StravaService","$auth","User","UserPlan"],angular.module("finalProject").service("StravaService",StravaService),StravaService.$inject=["$http"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").factory("UserPlan",UserPlan),UserPlan.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth","$window"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").controller("WeeksShowController",WeeksShowController).controller("WeeksEditController",WeeksEditController),WeeksShowController.$inject=["UserPlan","$state"],WeeksEditController.$inject=["UserPlan","$state"];
//# sourceMappingURL=app.js.map
