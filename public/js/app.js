"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix="",e.oauth2({name:"strava",url:t+"/oauth/strava",clientId:"15120",redirectUri:window.location.origin,authorizationEndpoint:"https://www.strava.com/oauth/authorize"})}function RegisterController(e,t,a){function o(){e.signup(r.user).then(function(e){a.localStorage.setItem("token",e.data.token),t.go("setup")})}var r=this;r.user={},r.submit=o}function LoginController(e,t){function a(){e.login(o.credentials).then(function(e){e.data.user.user_plans.forEach(function(e){e.active&&(o.activePlans=!0)}),o.activePlans?t.go("plansIndex"):t.go("setup")})}var o=this;o.credentials={},o.activePlans=!1,o.submit=a}function DaysIndexController(e,t,a){var o=this,r=a.moment;e.get(t.params,function(e){e.user_days.forEach(function(e){switch(e.dayOfWeekIndex=r(e.date).day(),e.dayOfWeekIndex){case 1:e.dayOfWeek="M";break;case 2:e.dayOfWeek="T";break;case 3:e.dayOfWeek="W";break;case 4:e.dayOfWeek="T";break;case 5:e.dayOfWeek="F";break;case 6:case 0:e.dayOfWeek="S"}}),o.plan=e})}function DaysShowController(e,t,a,o){function r(){n.day.completed=!0,e.update(n.dayId,n.day)}var n=this;if(n.planId=t.params.planId,n.dayId=t.params.dayId,n.day=e.get({id:n.dayId}),t.params.stravaId){var l=a.localStorage.getItem("strava_token"),s=t.params.stravaId;o.activityShow(l,s).then(function(e){n.stravaData=e},function(e){console.log(e)})}n.markDone=r}function Day(e,t){return new e(t+"/user_days/:id",{id:"@id"},{update:{method:"PUT"}})}function daysList(){return{restrict:"E",replace:!0,templateUrl:"templates/daysList.html",scope:{days:"=",plan:"="}}}function googleMap(e){return{restrict:"E",replace:!0,template:'<div class="google-map"></div>',scope:{data:"="},link:function(t,a){t.$watch("data",function(){var o=new e.google.maps.Map(a[0],{center:{lat:t.data[0].lat,lng:t.data[0].lng},zoom:14,disableDefaultUI:!0,zoomControl:!0,scaleControl:!0,scrollwheel:!1});new e.google.maps.Polyline({path:t.data,geodesic:!0,strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:2}).setMap(o)})}}}function MainController(e,t,a,o,r,n,l,s){function i(){var a=e.getPayload().id;t.go("usersShow",{id:a})}function c(){e.logout().then(function(){t.go("homepage")})}var d=this,u=r.moment;l.hash("top"),s(),d.isLoggedIn=e.isAuthenticated,d.hasActivePlan=!1,n.uiRouterState=t,d.hasStrava=r.localStorage.getItem("strava_token"),d.isLoggedIn()&&(d.currentUser=e.getPayload().id,d.all=a.get({id:d.currentUser},function(e){e.user_plans.forEach(function(e){e.active&&(d.activePlan=e.id,o.get({id:e.id},function(t){var a=u().format("YYYY-MM-DD"),o=u(e.start_date).format("YYYY-MM-DD");d.planStarted=!(o<=a),t.user_days.forEach(function(e){u(e.date).format("YYYY-MM-DD")===a&&(d.hasActivePlan=!0,d.dayId=e.id)})}))})})),d.logout=c,d.getUserId=i}function PlansIndexController(e,t){var a=this;a.currentUser=t.getPayload().id,a.all=e.get({id:a.currentUser},function(){a.all.user_plans.forEach(function(e){e.active&&(a.hasActivePlan=!0)})})}function PlansShowController(e,t,a){var o=this,r=a.moment;e.get(t.params,function(e){o.plan=e,o.totalWorkouts=0,o.totalMiles=0,o.completedWorkouts=0,o.completedMiles=0,o.labels=[],o.series=["Target","Actual"],o.targetData=[],o.actualData=[],o.colors=["#28C2FF","#791E94"];var t=r().format("YYYY-MM-DD"),n=r(o.plan.start_date).format("YYYY-MM-DD"),l=r(o.plan.end_date).format("YYYY-MM-DD");o.plan.status=n<t&&t>l?"past":n<t&&t<l?"current":"future",o.hasStrava=a.localStorage.getItem("strava_token");for(var s=o.plan.user_days.length/7,i=0;i<s;i++)o.labels.push("Week "+(i+1)),o.targetMiles=0,o.actualMiles=0,o.plan.user_days.forEach(function(e){e.week===i+1&&(e.exercise&&(o.targetMiles+=e.exercise.miles),e.completed&&(o.actualMiles+=e.exercise.miles))}),o.targetData.push(o.targetMiles),o.actualData.push(o.actualMiles);o.data=[o.targetData,o.actualData],o.plan.user_days.forEach(function(e){r(e.date).format("YYYY-MM-DD")===r().format("YYYY-MM-DD")&&(o.currentWeek=e.week),e.exercise&&(o.totalWorkouts+=1,o.totalMiles+=e.exercise.miles,e.completed&&(o.completedWorkouts+=1,o.completedMiles+=e.exercise.miles))}),o.totalMiles=Math.floor(o.totalMiles),o.completedMiles=Math.floor(o.completedMiles)})}function PlansEditController(e,t){function a(){r.plan.active=!1,t.update(e.params,r.plan,function(){e.go("plansIndex")})}function o(){t.remove(e.params,function(){e.go("plansIndex")})}var r=this;r.plan=t.get(e.params),r.endPlan=a,r.deletePlan=o}function PlansNewController(e,t,a){function o(e){r.activePlan.active=!1,t.update(e,r.activePlan,function(){a.go("setup")})}var r=this;e.get(a.params,function(e){r.userPlans=e.user_plans,r.hasActivePlan=!1,r.userPlans.forEach(function(e){!0===e.active&&(r.hasActivePlan=!0,r.activePlan=e)}),r.hasActivePlan||a.go("setup")}),r.endPlan=o}function Router(e,t){e.state("homepage",{url:"/",templateUrl:"/templates/homepage.html",controller:"MainController as main"}).state("setup",{url:"/setup",templateUrl:"/templates/setup.html",controller:"SetupController as setupPlan"}).state("plansIndex",{url:"/plans",templateUrl:"/templates/plansIndex.html",controller:"PlansIndexController as plansIndex"}).state("plansShow",{url:"/plans/:id",templateUrl:"/templates/plansShow.html",controller:"PlansShowController as plansShow"}).state("plansEdit",{url:"/plans/:id/end",templateUrl:"/templates/plansEdit.html",controller:"PlansEditController as plansEdit"}).state("plansNew",{url:"/:id/new",templateUrl:"/templates/plansNew.html",controller:"PlansNewController as plansNew"}).state("weeksShow",{url:"/plans/:planId/weeks/:weekId",templateUrl:"/templates/weeksShow.html",controller:"WeeksShowController as weeksShow"}).state("weeksEdit",{url:"/plans/:planId/weeks/:weekId/edit",templateUrl:"/templates/weeksEdit.html",controller:"WeeksEditController as weeksEdit"}).state("daysIndex",{url:"/plans/:id/days",templateUrl:"/templates/daysIndex.html",controller:"DaysIndexController as daysIndex"}).state("daysShow",{url:"/plans/:planId/days/:dayId?stravaId",templateUrl:"/templates/daysShow.html",controller:"DaysShowController as daysShow"}).state("stravaIndex",{url:"/feed",templateUrl:"/templates/activityFeed.html",controller:"StravaIndexController as stravaIndex"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}),t.otherwise("/")}function SetupController(e,t,a){function o(){e.save(i,function(){t.go("plansIndex")})}function r(){i.distanceVisible=!0,i.activityVisible=!1,i.dateVisible=!1,i.planVisible=!1}function n(){i.distanceVisible=!1,i.activityVisible=!0,i.dateVisible=!1,i.planVisible=!1}function l(){i.distanceVisible=!1,i.activityVisible=!1,i.dateVisible=!0,i.planVisible=!1}function s(){i.distanceVisible=!1,i.activityVisible=!1,i.dateVisible=!1,i.planVisible=!0}var i=this,c=a.moment;i.end_date=new Date(c().add(6,"weeks").format("YYYY-MM-DD")),i.distanceVisible=!0,i.activityVisible=!1,i.dateVisible=!1,i.planVisible=!1,i.showActivity=n,i.showDate=l,i.showPlan=s,i.showDistance=r,i.create=o}function StravaIndexController(e,t,a,o,r,n,l,s){function i(){return!!l.localStorage.getItem("strava_token")}function c(){return l.localStorage.getItem("strava_token")}function d(e){for(var t=0;t<e.length;t++)!function(t){var a=m.userDays.findIndex(function(a){return h(a.date).format("YYYY-MM-DD")===e[t].start_date});a>0&&(e[t].userDay=m.userDays.splice(a,1)[0])}(t);return e}function u(){r.query({user_id:g,active:!0}).$promise.then(function(e){if(m.planId=e[0].id,m.userDays=e[0].user_days,i())return t.activityIndex(c())}).then(function(e){m.allActivities=d(e||[]),m.userDays.filter(function(e){return e.completed}).forEach(function(e){m.allActivities.push(e)})}).catch(function(e){console.log(e)})}function p(e,t,a){n.update({id:e.dayId},{strava_id:e.stravaId,completed:!0},function(){s.go("daysShow",{planId:e.planId,dayId:e.dayId,stravaId:e.stravaId})})}function f(){i()?u():a.authenticate("strava").then(function(e){l.localStorage.setItem("strava_token",e.data.access_token);var t=e.data.athlete.id;o.update({id:g},{strava_id:t},function(){u()})})}var m=this,h=l.moment,g=a.getPayload().id;m.allActivities=[],m.userDays=[],u(),m.markComplete=p,m.sync=f}function StravaService(e,t,a){function o(t){return e({method:"GET",url:a+"/strava",params:{accessToken:t}}).then(function(e){return e.data.forEach(function(e){e.start_date=n(e.start_date).format("YYYY-MM-DD"),e.distance=(e.distance/1e3*.621371).toFixed(1),e.elapsed_hours=Math.floor(e.elapsed_time/60/60),e.elapsed_minutes=Math.floor(e.elapsed_time/60%60),e.elapsed_seconds=(e.elapsed_time%60*60).toString().slice(0,2)%60}),e.data},function(e){console.log(e)})}function r(t,a){return e({method:"GET",url:"http://localhost:3000/api/strava/activity",params:{activityId:a,accessToken:t}}).then(function(e){return e.data.distance=(e.data.distance/1e3*.621371).toFixed(1),e.data.elapsed_minutes=Math.floor(e.data.elapsed_time/60),e.data.elapsed_seconds=e.data.elapsed_time%60*60,e.data},function(e){console.log(e)})}var n=t.moment;this.activityIndex=o,this.activityShow=r}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UserPlan(e,t){return new e(t+"/user_plans/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){this.all=e.query()}function UsersShowController(e,t,a,o){function r(){s.user.$remove(function(){t.go("usersIndex")})}function n(){a.logout().then(function(){o.localStorage.removeItem("strava_token"),t.go("homepage")})}function l(){a.authenticate("strava").then(function(a){o.localStorage.setItem("strava_token",a.data.access_token),s.user.strava_id=a.data.athlete.id,e.update(s.user.id,s.user,function(){t.go("stravaIndex")})})}var s=this;s.user=e.get(t.params),s.logout=n,s.delete=r,s.authenticateStrava=l}function UsersEditController(e,t){function a(){e.update(o.user.id,o.user,function(){t.go("usersShow",t.params)})}var o=this;o.user=e.get(t.params),o.update=a}function WeeksShowController(e,t,a){var o=this,r=a.moment;o.planId=t.params.planId,o.weekId=t.params.weekId,o.totalWorkouts=0,o.completedWorkouts=0,o.totalMiles=0,o.completedMiles=0,e.get({id:o.planId,week:o.weekId},function(e){o.thisWeek=e.user_days,o.thisWeek.forEach(function(e){switch(e.dayOfWeekIndex=r(e.date).day(),e.dayOfWeekIndex){case 1:e.dayOfWeek="M";break;case 2:e.dayOfWeek="T";break;case 3:e.dayOfWeek="W";break;case 4:e.dayOfWeek="T";break;case 5:e.dayOfWeek="F";break;case 6:case 0:e.dayOfWeek="S"}e.exercise&&(o.totalWorkouts+=1,o.totalMiles+=e.exercise.miles,e.completed&&(o.completedWorkouts+=1,o.completedMiles+=e.exercise.miles))}),o.totalMiles=Math.floor(o.totalMiles),o.completedMiles=Math.floor(o.completedMiles)})}function WeeksEditController(e,t,a){function o(e){var t=n.startingDay.position;n.thisWeek.splice(e,1),n.thisWeek.forEach(function(e){e.position=t,t++})}function r(){e.update(n.planId,n.plan)}var n=this,l=a.moment;n.planId=t.params.planId,n.weekId=t.params.weekId,e.get({id:n.planId,week:n.weekId},function(e){n.plan=e,e.user_days.forEach(function(e){switch(e.dayOfWeekIndex=l(e.date).day(),e.dayOfWeekIndex){case 1:e.dayOfWeek="M";break;case 2:e.dayOfWeek="T";break;case 3:e.dayOfWeek="W";break;case 4:e.dayOfWeek="T";break;case 5:e.dayOfWeek="F";break;case 6:case 0:e.dayOfWeek="S"}}),n.thisWeek=e.user_days.sort(function(e,t){return e.position-t.position}),n.startingDay=e.user_days[0]}),n.updatePosition=o,n.savePlan=r}angular.module("finalProject",["ngResource","ui.router","satellizer","chart.js","dndLists","ngMessages","ngMaterial"]).constant("API_URL","localhost"===window.location.hostname?"http://localhost:3000/api":"//final-project-api.herokuapp.com/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state","$window"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("DaysIndexController",DaysIndexController).controller("DaysShowController",DaysShowController),DaysIndexController.$inject=["UserPlan","$state","$window"],DaysShowController.$inject=["Day","$state","$window","StravaService"],angular.module("finalProject").factory("Day",Day),Day.$inject=["$resource","API_URL"],angular.module("finalProject").directive("daysList",daysList),angular.module("finalProject").directive("googleMap",googleMap),googleMap.$inject=["$window"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","User","UserPlan","$window","$scope","$location","$anchorScroll"],angular.module("finalProject").controller("PlansIndexController",PlansIndexController).controller("PlansShowController",PlansShowController).controller("PlansEditController",PlansEditController).controller("PlansNewController",PlansNewController),PlansIndexController.$inject=["User","$auth"],PlansShowController.$inject=["UserPlan","$state","$window"],PlansEditController.$inject=["$state","UserPlan"],PlansNewController.$inject=["User","UserPlan","$state"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("SetupController",SetupController),SetupController.$inject=["UserPlan","$state","$window"],angular.module("finalProject").controller("StravaIndexController",StravaIndexController),StravaIndexController.$inject=["$http","StravaService","$auth","User","UserPlan","Day","$window","$state"],angular.module("finalProject").service("StravaService",StravaService),StravaService.$inject=["$http","$window","API_URL"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").factory("UserPlan",UserPlan),UserPlan.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth","$window"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").controller("WeeksShowController",WeeksShowController).controller("WeeksEditController",WeeksEditController),WeeksShowController.$inject=["UserPlan","$state","$window"],WeeksEditController.$inject=["UserPlan","$state","$window"];
//# sourceMappingURL=app.js.map
