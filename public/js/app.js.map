{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/day.js","js/controllers/day.js","js/controllers/main.js","js/controllers/plan.js","js/router.js","js/controllers/setup.js","js/models/user.js","js/models/userPlan.js","js/controllers/users.js","js/controllers/week.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","Day","$resource","id","update","method","DaysIndexController","UserPlan","daysIndex","plan","get","params","DaysShowController","markDone","console","log","daysShow","planId","dayId","day","MainController","logout","main","isLoggedIn","isAuthenticated","PlansIndexController","User","plansIndex","currentUser","getPayload","all","query","PlansShowController","plansShow","totalWorkouts","totalMiles","completedWorkouts","completedMiles","user_days","forEach","date","moment","format","today","currentWeek","week","exercise","miles","completed","Math","floor","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","SetupController","create","save","setupPlan","UsersIndexController","usersIndex","UsersShowController","userDelete","usersShow","$remove","delete","UsersEditController","usersEdit","WeeksShowController","weeksShow","weekId","thisWeek","push","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('setup');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('setup');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .factory('Day', Day);\n\nDay.$inject = ['$resource', 'API_URL'];\nfunction Day($resource, API_URL) {\n  return new $resource(`${API_URL}/user_days/:id`, { id: '@id'}, {\n    update: { method: 'PUT'}\n  });\n}\n","angular.module('finalProject')\n  .controller('DaysIndexController', DaysIndexController)\n  .controller('DaysShowController', DaysShowController);\n\nDaysIndexController.$inject = ['UserPlan', '$state'];\nfunction DaysIndexController(UserPlan, $state) {\n  const daysIndex = this;\n\n  daysIndex.plan = UserPlan.get($state.params);\n}\n\nDaysShowController.$inject = ['Day', '$state'];\nfunction DaysShowController(Day, $state) {\n  const daysShow = this;\n\n  daysShow.planId = $state.params.planId;\n  daysShow.dayId = $state.params.dayId;\n\n  daysShow.day = Day.get({ id: daysShow.dayId });\n\n  function markDone(){\n    console.log('clicked');\n  }\n\n  daysShow.markDone = markDone;\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth','$state'];\nfunction MainController($auth, $state){\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        // $window.localStorage.removeItem('token');\n        $state.go('login');\n      });\n  }\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .controller('PlansIndexController', PlansIndexController)\n  .controller('PlansShowController', PlansShowController);\n\nPlansIndexController.$inject = ['User', '$auth'];\nfunction PlansIndexController(User, $auth) {\n  const plansIndex = this;\n\n  plansIndex.currentUser = $auth.getPayload().id;\n\n  plansIndex.all = User.query();\n}\n\nPlansShowController.$inject = ['UserPlan' ,'$state'];\nfunction PlansShowController(UserPlan, $state) {\n  const plansShow = this;\n\n  plansShow.plan = UserPlan.get($state.params, () => {\n\n    plansShow.totalWorkouts = 0;\n    plansShow.totalMiles = 0;\n    plansShow.completedWorkouts = 0;\n    plansShow.completedMiles = 0;\n\n    plansShow.plan.user_days.forEach((day) => {\n      // Find current week\n\n      const date =  moment(day.date).format('YYYY-MM-DD');\n      const today = moment().format('YYYY-MM-DD');\n      if (date === today) {\n        plansShow.currentWeek = day.week;\n      }\n\n      // Calculate total number of workout days\n      if (day.exercise) {\n        plansShow.totalWorkouts += 1;\n        plansShow.totalMiles += day.exercise.miles;\n\n        // Calculate num completed workouts\n        if (day.completed) {\n          plansShow.completedWorkouts += 1;\n          plansShow.completedMiles += day.exercise.miles;\n        }\n      }\n    });\n\n    plansShow.totalMiles = Math.floor(plansShow.totalMiles);\n    plansShow.completedMiles = Math.floor(plansShow.completedMiles);\n\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('homepage', {\n      url: '/',\n      templateUrl: '/templates/homepage.html',\n      controller: 'MainController as main'\n    })\n    .state('setup', {\n      url: '/setup',\n      templateUrl: '/templates/setup.html',\n      controller: 'SetupController as setupPlan'\n    })\n    .state('plansIndex', {\n      url: '/plans',\n      templateUrl: '/templates/plansIndex.html',\n      controller: 'PlansIndexController as plansIndex'\n    })\n    .state('plansShow', {\n      url: '/plans/:id',\n      templateUrl: '/templates/plansShow.html',\n      controller: 'PlansShowController as plansShow'\n    })\n    .state('weeksShow', {\n      url: '/plans/:planId/weeks/:weekId',\n      templateUrl: '/templates/weeksShow.html',\n      controller: 'WeeksShowController as weeksShow'\n    })\n    .state('daysIndex', {\n      url: '/plans/:id/days',\n      templateUrl: '/templates/daysIndex.html',\n      controller: 'DaysIndexController as daysIndex'\n    })\n    .state('daysShow', {\n      url: '/plans/:planId/days/:dayId',\n      templateUrl: '/templates/daysShow.html',\n      controller: 'DaysShowController as daysShow'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .controller('SetupController', SetupController);\n\nSetupController.$inject = ['UserPlan','$state'];\nfunction SetupController(UserPlan, $state) {\n  const setupPlan = this;\n\n  function create(){\n    UserPlan.save(setupPlan, () => {\n      $state.go('plan');\n    });\n  }\n\n  setupPlan.create = create;\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id'}, {\n    update: { method: 'PUT'}\n  });\n}\n","angular.module('finalProject')\n  .factory('UserPlan', UserPlan);\n\nUserPlan.$inject = ['$resource', 'API_URL'];\nfunction UserPlan($resource, API_URL) {\n  return new $resource(`${API_URL}/user_plans/:id`, { id: '@id'}, {\n    update: { method: 'PUT'}\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state'];\nfunction UsersShowController(User, $state) {\n  const usersShow = this;\n  usersShow.user = User.get($state.params);\n\n  function userDelete() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = userDelete;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    User.update(usersEdit.user.id, usersEdit.user, () => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  usersEdit.update = update;\n}\n","angular.module('finalProject')\n  .controller('WeeksShowController', WeeksShowController);\n\nWeeksShowController.$inject = ['UserPlan', '$state'];\nfunction WeeksShowController(UserPlan, $state) {\n  const weeksShow = this;\n\n  weeksShow.planId = $state.params.planId;\n  weeksShow.weekId = $state.params.weekId;\n\n  weeksShow.plan = UserPlan.get({ id: weeksShow.planId }, () => {\n    weeksShow.thisWeek = [];\n\n    weeksShow.plan.user_days.forEach((day) => {\n      if (day.week == weeksShow.weekId) {\n        weeksShow.thisWeek.push(day);\n      }\n    });\n  });\n}\n"]}